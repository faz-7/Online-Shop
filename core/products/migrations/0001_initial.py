# Generated by Django 4.1.6 on 2023-02-09 22:09

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='products.category')),
            ],
            options={
                'verbose_name_plural': 'categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.CharField(max_length=2, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('type', models.CharField(choices=[('P', 'Percent'), ('C', 'Cash')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('image', models.ImageField(upload_to='')),
                ('brand', models.CharField(blank=True, default='empty', max_length=20)),
                ('description', ckeditor.fields.RichTextField()),
                ('price', models.IntegerField()),
                ('available', models.BooleanField(default=True)),
                ('categories', models.ManyToManyField(related_name='product_category', to='products.category')),
                ('discounts', models.ManyToManyField(blank=True, related_name='product_discount', to='products.discount')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
    ]
